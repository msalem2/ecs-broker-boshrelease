---
name: ecs-broker
product_version: 1.5.0
label: Ecs Service Broker Experimental
rank: 50
metadata_version: '1.5'
icon_image: 
serial: true
releases:
- name: ecs_broker
  version: '1.5'
  file: ecs_broker-1.5.tgz
stemcell_criteria:
  os: ubuntu-trusty
  version: '3026'
  requires_cpi: false
property_blueprints:
- name: encryption_key
  type: secret
- name: vm_credentials
  type: salted_credentials
  default:
    identity: vcap
- name: app_name
  type: string
  configurable: true
  default: EcsServiceBroker
- name: app_version
  type: string
  configurable: true
  default: v1
- name: app_uri
  type: string
  configurable: true
  default: ecs-broker
- name: create_open_security_group
  type: boolean
  configurable: true
  default: false
- name: enable_global_access_to_plans
  type: boolean
  configurable: true
  default: false
- name: managementEndpoint
  type: url
  configurable: true
- name: objectEndpoint
  type: url
  configurable: true
- name: baseUrl
  type: string
  configurable: true
- name: repositoryEndpoint
  type: url
  configurable: true
- name: replicationGroup
  type: string
  configurable: true
- name: namespace
  type: string
  configurable: true
- name: repositoryUser
  type: string
  configurable: true
  default: 'repository'
- name: repositoryBucket
  type: string
  configurable: true
  default: 'repository'
- name: username
  type: string
  configurable: true
  default: 'root'
- name: password
  type: string
  configurable: true
  default: 'ChangeMe'
- name: prefix
  type: string
  configurable: true
  default: 'ecs-cf-broker-'
- name: brokerApiVersion
  type: string
  configurable: true
  default: '2.8'
### CUSTOM_VARIABLE_DEFN_END_MARKER
- name: org_quota
  type: integer
  configurable: false
  constraints:
    min: 512
    max: 1024
  default: 512
- name: memory
  type: integer
  configurable: false
  constraints:
    min: 256
    max: 1024
  default: 256
- name: internal_service_names
  type: string
  configurable: false
  default: "ecs-bucket"
- name: persistence_store_type
  type: none
  configurable: false
#   options:
#   - name: mysql
#     label: Managed MySQL Service
#     default: true
#   - name: custom
#     label: User specified Persistent Store
#   - name: none
#     label: None


### ON_DEMAND_PLAN_BEGIN_MARKER
- name: on_demand_service_plans_collection
  type: collection
  configurable: true

  # Needs to have its own inner/nested property_blueprints when its a collection
  property_blueprints:
  - name: guid
    type: uuid
    optional: false
    unique: true
  - name: plan_name
    type: string
    configurable: true
  - name: plan_description
    type: string
    configurable: true
  - name: quota-limit
    type: integer
    configurable: true
  - name: quota-warning
    type: integer
    configurable: true

### ON_DEMAND_PLAN_END_MARKER

form_types:
- property_inputs:
  - reference: .properties.app_name
    label: Service Broker Application Name
    description: 'Enter the name for the Service Broker App'
  - reference: .properties.app_version
    label: Service Broker Application version
    description: 'Enter the version of the Service Broker App (Final app name would include app version like ${appName}-${appversion}'
  - reference: .properties.app_uri
    label: Service Broker Application URI
    description: 'Enter the uri/endpoint for the Service Broker app (on push to CF)'
  - reference: .properties.create_open_security_group
    label: Open up Security Groups
    description: 'Open up security group on CF for Service Broker to access other apps or CF Cloud Controller'
  - reference: .properties.enable_global_access_to_plans
    label: Enable Global access to all Services and Plans
    description: 'Open up access to all service plans across all orgs and spaces'
  - reference: .properties.managementEndpoint
    label: ECS Management Endpoint
    description: 'Enter the uri/endpoint for the ECS HTTPS management API'
  - reference: .properties.objectEndpoint
    label: ECS Object Endpoint
    description: '(Optional) Enter the uri/endpoint for the ECS S3 API.  Not needed the base URL endpoint should be used.'
  - reference: .properties.baseUrl
    label: ECS Base URL
    description: 'Enter the name of the ECS configured base URL that should be used with bucket credentials.'
  - reference: .properties.repositoryEndpoint
    label: Repository Endpoint
    description: '(Optional) Enter the uri/endpoint for the ECS S3 API that should be used for persisting broker metadata.  Defaults to the object endpoint or base url.'
  - reference: .properties.replicationGroup
    label: Replication Group
    description: 'Enter the ID of the ECS replication group to be used for created buckets.'
  - reference: .properties.namespace
    label: Namespace
    description: 'Enter the name of the ECS namespace to be used for created buckets and users.'
  - reference: .properties.repositoryUser
    label: Repository User
    description: '(Optional) Enter the name of the user that should be created/used for managing broker metadata.  Defaults to "repository".'
  - reference: .properties.repositoryBucket
    label: Repository Bucket
    description: '(Optional) Enter the name of the bucket that should be created/used for managing broker metadata.  Defaults to "repository".'
  - reference: .properties.username
    label: ECS Username
    description: '(Optional) Enter the name of the ECS Management API user.  Defaults to "root".'
  - reference: .properties.password
    label: ECS Password
    description: '(Optional) Enter the ECS Management API password.  Defaults to "ChangeMe"'
  - reference: .properties.prefix
    label: ECS Repository Prefix
    description: '(Optional) Enter a string used to prefix broker created buckets and users.  Defaults to "ecs-cf-repository-"'
  name: ecs_broker_app
  label: Service Broker Application
  description: Service Broker configuration

  ### ON_DEMAND_PLAN_BEGIN_MARKER
- property_inputs:
  - reference: .properties.on_demand_service_plans_collection
    label: On-Demand Service Plans
    property_inputs:
    - reference: plan_name
      label: Plan Name
      description: "Name of Plan"
      slug: false
    - reference: plan_description
      label: Plan Description
      description: "Description of Plan"
      slug: false
    - reference: plan_details
      label: "Plan Details or bullets (individual line entries, each with Name : Value : Description and ending with ;)"
      description: "Specify configurations or bullets for the plan. Specify each plan detail or bullet in a separate line with a name, value, description separated by ':' and ending with ';'.
      Detail1: associated value : description ; <NEWLINE> Detail2: its value : description <NEWLINE>"
      slug: false
  name: on_demand_service_plans
  label: On-Demand Service Plans
  description: "An on-demand service plan lets Pivotal CF users create their own Service Plans from the Pivotal CF command line interface or developer console. Use this page to configure the service plan's settings."
  ### ON_DEMAND_PLAN_END_MARKER

 name: deploy-service-broker
  resource_label: Deploy Ecs Service Broker
  errand: true
  templates:
  - name: deploy-service-broker
    release: ecs_broker
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 512
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 2048
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  instance_definitions:
  - name: instances
    type: integer
    configurable: false
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap
  - name: broker_credentials
    type: salted_credentials

  manifest: |
    domain: (( ..cf.cloud_controller.system_domain.value ))
    app_domains:
      - (( ..cf.cloud_controller.apps_domain.value ))
    ssl:
      skip_cert_verify: (( ..cf.ha_proxy.skip_cert_verify.value ))
    uaa:
      url: https://uaa.(( ..cf.cloud_controller.system_domain.value ))
      clients:
        ecs_broker:
          secret: test
    ecs_broker:
      app_name: (( .properties.app_name.value ))
      app_version: (( .properties.app_version.value ))
      app_uri: (( .properties.app_uri.value ))
      create_open_security_group: (( .properties.create_open_security_group.value ))
      app_push:
        org_quota: (( .properties.org_quota.value ))
        timeout: 180
        memory: (( .properties.memory.value ))
      managementEndpoint: (( .properties.managementEndpoint.value ))
      objectEndpoint: (( .properties.objectEndpoint.value ))
      baseUrl: (( .properties.baseUrl.value ))
      repositoryEndpoint: (( .properties.repositoryEndpoint.value ))
      replicationGroup: (( .properties.replicationGroup.value ))
      namespace: (( .properties.namespace.value ))
      repositoryUser: (( .properties.repositoryUser.value ))
      repositoryBucket: (( .properties.repositoryBucket.value ))
      username: (( .properties.username.value ))
      password: (( .properties.password.value ))
      prefix: (( .properties.prefix.value ))
      securityUser: user
      securityPassword: password   
      certificate: (( .properties.certificate.value ))
      persistence_store_type: none


      ### ON_DEMAND_PLAN_BEGIN_MARKER
      on_demand_service_plans: (( .properties.on_demand_service_plans_collection.value ))
      ### ON_DEMAND_PLAN_END_MARKER
      encryption_key: (( .properties.encryption_key.value ))
      cf:
        admin_user: (( ..cf.uaa.system_services_credentials.identity ))
        admin_password: (( ..cf.uaa.system_services_credentials.password ))
      broker:
        user: (( .deploy-service-broker.broker_credentials.identity ))
        password: (( .deploy-service-broker.broker_credentials.password ))
        internal_service_names: (( .properties.internal_service_names.value ))

- name: register-broker
  resource_label: Register Ecs Service Broker
  templates:
  - name: register-broker
    release: ecs_broker
  errand: true
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 512
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 2048
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  instance_definitions:
  - name: instances
    type: integer
    configurable: false
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap

  manifest: |
    domain: (( ..cf.cloud_controller.system_domain.value ))
    app_domains:
      - (( ..cf.cloud_controller.apps_domain.value ))
    ssl:
      skip_cert_verify: (( ..cf.ha_proxy.skip_cert_verify.value ))
    uaa:
      url: https://uaa.(( ..cf.cloud_controller.system_domain.value ))
      clients:
        ecs_broker:
          secret: test
    ecs_broker:
      app_name: (( .properties.app_name.value ))
      app_version: (( .properties.app_version.value ))
      app_uri: (( .properties.app_uri.value ))
      encryption_key: (( .properties.encryption_key.value ))
      enable_global_access_to_plans: (( .properties.enable_global_access_to_plans.value ))
      cf:
        admin_user: (( ..cf.uaa.system_services_credentials.identity ))
        admin_password: (( ..cf.uaa.system_services_credentials.password ))
      broker:
        user: (( .deploy-service-broker.broker_credentials.identity ))
        password: (( .deploy-service-broker.broker_credentials.password ))
        internal_service_names: (( .properties.internal_service_names.value ))

- name: destroy-broker
  resource_label: Remove Ecs Service Broker
  templates:
  - name: destroy-broker
    release: ecs_broker
  errand: true
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 512
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 1024
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  instance_definitions:
  - name: instances
    type: integer
    configurable: false
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap

  manifest: |
    domain: (( ..cf.cloud_controller.system_domain.value ))
    app_domains:
      - (( ..cf.cloud_controller.apps_domain.value ))
    ssl:
      skip_cert_verify: (( ..cf.ha_proxy.skip_cert_verify.value ))
    uaa:
      url: https://uaa.(( ..cf.cloud_controller.system_domain.value ))
      clients:
        ecs_broker:
          secret: test
    ecs_broker:
      app_name: (( .properties.app_name.value ))
      app_version: (( .properties.app_version.value ))
      app_uri: (( .properties.app_uri.value ))
      encryption_key: (( .properties.encryption_key.value ))
      cf:
        admin_user: (( ..cf.uaa.system_services_credentials.identity ))
        admin_password: (( ..cf.uaa.system_services_credentials.password ))
      broker:
        user: (( .deploy-service-broker.broker_credentials.identity ))
        password: (( .deploy-service-broker.broker_credentials.password ))
        internal_service_names: (( .properties.internal_service_names.value ))

- name: compilation
  resource_label: compilation
  resource_definitions:
   - name: ram
     type: integer
     configurable: true
     default: 1_024
   - name: ephemeral_disk
     type: integer
     configurable: true
     default: 1024
   - name: persistent_disk
     type: integer
     configurable: true
     default: 0
   - name: cpu
     type: integer
     configurable: true
     default: 2

  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1

  instance_definitions:
    - name: instances
      type: integer
      default: 1

update:
  canaries: 1
  canary_watch_time: 60000-240000
  max_in_flight: 1
  update_watch_time: 60000-240000

requires_product_versions:
- name: cf
  version: "~> 1.0"
provides_product_versions:
- name: ecs_broker
  version: '1.5'
post_deploy_errands:
- name: deploy-service-broker
- name: register-broker
pre_delete_errands:
- name: destroy-broker

